build: &build
  working_directory: /mnt/crate
  steps:
    - checkout
    - attach_workspace:
        at: "."
    - restore_cache:
        keys:
          - cargo-v1-{{ checksum "Cargo.toml" }}
    - run:
        name: Print version information
        command: rustc --version; cargo --version
    - run:
        name: Build
        command: |
          yarn --ignore-scripts && \
          yarn build
    - run:
        name: Prune the output files
        command: |
          for file in target/release/* target/release/.??*; do
            [ -d $file -o ! -x $file ] && rm -r $file
          done
    - persist_to_workspace:
        root: "."
        paths:
          - ./*

deploy: &deploy
  working_directory: /mnt/crate
  steps:
    - attach_workspace:
        at: "."
    - run:
        name: "Install Requirements"
        command: yarn --ignore-scripts
    - run:
        name: "Deploy to Github Release"
        command: |
          if git log -1 --pretty=%B | grep "^[0-9]\+\.[0-9]\+\.[0-9]\+$";
          then
            echo $gcp_secret_file > ~/google-secret-file.json && \
            export GOOGLE_APPLICATION_CREDENTIALS="${HOME}/google-secret-file.json"; node tools/upload.js && \
            export GIT_TAG="$(git describe --tags $(git rev-list --tags --max-count=1))"; \
            ghr -u "${CIRCLE_PROJECT_USERNAME}" -r "${CIRCLE_PROJECT_REPONAME}" "${GIT_TAG}" dist/*.node
          else
            echo "Not a release, skipping publish"
          fi

version: 2
jobs:
  cargo_fetch:
    docker:
      - image: broooooklyn/rust-with-node:latest
    working_directory: /mnt/crate
    steps:
      - checkout
      - restore_cache:
          keys:
            - cargo-v1-{{ checksum "Cargo.toml" }}
            - cargo-v1-
      - run:
          name: fetch and update
          command: |
            cargo update && \
            cargo fetch
      - persist_to_workspace:
          root: "."
          paths:
            - Cargo.lock
      - save_cache:
          key: cargo-v1-{{ checksum "Cargo.toml" }}
          paths:
            - /usr/local/cargo/registry
            - /usr/local/cargo/git
  build8:
    <<: *build
    docker:
      - image: broooooklyn/rust-with-node:8
    
  build10:
    <<: *build
    docker:
      - image: broooooklyn/rust-with-node:10

  deploy8:
    <<: *deploy
    docker:
      - image: broooooklyn/rust-with-node:8

  deploy10:
    <<: *deploy
    docker:
      - image: broooooklyn/rust-with-node:10

  nightly_build:
    machine: true
    steps:
      - checkout
      - run: docker login -u $DOCKER_USER -p $DOCKER_PASS
      - run: docker build . -t broooooklyn/rust-with-node:8 --build-arg NODE_VERSION=8
      - run: docker push broooooklyn/rust-with-node:8
      - run: docker build . -t broooooklyn/rust-with-node:10 --build-arg NODE_VERSION=10
      - run: docker tag broooooklyn/rust-with-node:10 broooooklyn/rust-with-node:latest
      - run: docker push broooooklyn/rust-with-node:10
      - run: docker push broooooklyn/rust-with-node:latest

  npm_deploy:
    docker:
      - image: broooooklyn/rust-with-node:latest
    working_directory: /mnt/crate
    steps:
      - checkout
      - run: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
      - run:
          name: "Deploy to NPM"
          command: |
            if git log -1 --pretty=%B | grep "^[0-9]\+\.[0-9]\+\.[0-9]\+$";
            then
              npm publish
            else
              echo "Not a release, skipping publish"
            fi

  nightly:
    jobs:
      - nightly_build
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - master
workflows:
  version: 2
  build_all_versions:
    jobs:
      - cargo_fetch
      - build8:
          requires:
            - cargo_fetch
      - deploy8:
          requires:
            - build8
          filters:
            tags:
              only: /^v.*/
            branches:
              only: master
      - build10:
          requires:
            - cargo_fetch
      - deploy10:
          requires:
            - build10
          filters:
            tags:
              only: /^v.*/
            branches:
              only: master
      - npm_deploy:
          requires:
            - deploy8
            - deploy10
          filters:
            tags:
              only: /^v.*/
            branches:
              only: master
